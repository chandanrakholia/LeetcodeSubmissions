{"id":737352584,"lang":"cpp","lang_name":"C++","time":"9Â months","timestamp":1656845490,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/737352584/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void fun1(TreeNode* root,vector<int>&v1){\n        if(root==NULL) return;\n        if(root->right==NULL or root->left==NULL){\n        v1.push_back(-1);\n        }\n        fun1(root->left,v1);\n        v1.push_back(root->val);\n        fun1(root->right,v1);\n    }\n    void fun2(TreeNode* root,vector<int>&v2){\n        if(root==NULL) return;\n        if(root->right==NULL or root->left==NULL){\n            v2.push_back(-1);\n            // return;\n        }\n        fun2(root->right,v2);\n        v2.push_back(root->val);\n        fun2(root->left,v2);\n    }\n    bool isSymmetric(TreeNode* root) {\n        vector<int>v1;\n        vector<int>v2;\n        fun1(root,v1);\n        fun1(root,v2);\n        bool f=false;\n        for(int i=0;i<v1.size() and v2.size();i++){\n            if(v1[i]!=v2[i]){\n                f=true;\n                break;\n            }\n        }\n        if(f){\n            return false;\n        }\n        else{\n            return true;\n        }\n    }\n};","compare_result":"100010001010100000100101010100111001100001000010000000000100100001001110010011100000000010110000100001101001001000010010100001110110001101000010111100011001010011100111011000001100001100110010100000","title_slug":"symmetric-tree","has_notes":false}