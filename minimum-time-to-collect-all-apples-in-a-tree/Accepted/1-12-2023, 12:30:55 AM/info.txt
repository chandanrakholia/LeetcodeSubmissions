{"id":876317816,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1673463655,"status":10,"status_display":"Accepted","runtime":"515 ms","url":"/submissions/detail/876317816/","is_pending":"Not Pending","title":"Minimum Time to Collect All Apples in a Tree","memory":"73.1 MB","code":"class Solution {\npublic:\nint dfs(int start,int n,vector<bool> &visited, unordered_map<int, list<int> > &adj, vector<bool>& hasApple){\n    int time=0;\n    for(auto i: adj[start]){\n        if(!visited[i]){\n            visited[i]=true;\n            int child=dfs(i, n, visited, adj, hasApple);\n            if(hasApple[i] || child){\n                time+=child+2;\n            }\n            cout<<i<<\" -> \"<<child<<\" \"<<time<<endl;\n        }\n    }\n    return time;\n}\n    int minTime(int n, vector<vector<int>>& edges, vector<bool>& hasApple) {\n        unordered_map<int, list<int> > adj;\n        for(int i=0;i<edges.size();i++){\n            int u=edges[i][0];\n            int v=edges[i][1];\n            adj[u].push_back(v);\n            adj[v].push_back(u);\n        }\n        vector<bool> visited(n, false);\n        visited[0]=true;\n        return dfs(0, n, visited, adj, hasApple);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"minimum-time-to-collect-all-apples-in-a-tree","has_notes":false}