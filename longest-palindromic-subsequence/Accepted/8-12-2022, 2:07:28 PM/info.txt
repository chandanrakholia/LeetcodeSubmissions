{"id":771748364,"lang":"cpp","lang_name":"C++","time":"7 months, 3 weeks","timestamp":1660293448,"status":10,"status_display":"Accepted","runtime":"92 ms","url":"/submissions/detail/771748364/","is_pending":"Not Pending","title":"Longest Palindromic Subsequence","memory":"10.8 MB","code":"class Solution {\npublic:\n    int dp[1001][1001];\n//     int solve(string &x,string &y,int n,int m){\n//         if(n==0 || m==0) dp[n][m]=0;\n//         if(dp[n][m]!=-1) return dp[n][m];\n//         else if(x[n-1]==y[m-1]) return 1+solve(x,y,n-1,m-1);\n//         else{\n//            return dp[n][m]=max(solve(x,y,n-1,m),solve(x,y,n,m-1));\n//         }\n        \n//     }\n        int solve(string x,string y,int n,int m){\n        for(int i=0;i<n+1;i++){\n            dp[i][0]=0;\n        }\n        for(int i=0;i<m+1;i++){\n            dp[0][i]=0;\n        }\n        for(int i=1;i<n+1;i++){\n            for(int j=1;j<m+1;j++){\n                if(x[i-1]==y[j-1]) \n                    dp[i][j]=dp[i-1][j-1]+1;\n                else{\n                    dp[i][j]=max(dp[i-1][j],dp[i][j-1]);\n                }\n            }\n        }\n        return dp[n][m];\n    }\n    int longestPalindromeSubseq(string s) {\n    string rev;\n        int n=s.length();\n    for (int i = n - 1; i >= 0; i--)\n        rev.push_back(s[i]);\n        return solve(s,rev,s.length(),rev.length());\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-subsequence","has_notes":false}