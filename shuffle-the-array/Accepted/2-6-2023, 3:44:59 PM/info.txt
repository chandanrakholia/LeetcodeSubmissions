{"id":892567994,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1675678499,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/892567994/","is_pending":"Not Pending","title":"Shuffle the Array","memory":"9.8 MB","code":"class Solution {\npublic:\n    vector<int> myorginal(vector<int>& nums, int n){\n        vector<int>ans;\n        int i=0;\n        int j=n;\n        while(j < 2*n){\n            ans.push_back(nums[i]);\n            ans.push_back(nums[j]);\n            i++;j++;\n        }\n        return ans;\n    }\n    vector<int> anotherwayofimplementation(vector<int>& nums, int n){\n        vector<int>ans(2*n);\n        for(int i=0;i<n;i++){\n            ans[2*i]=nums[i];\n            ans[2*i+1]=nums[n+i];\n        }\n        return ans;\n    }\n    vector<int> Optimized_with_BITMANIPULATION(vector<int>& nums, int n){\n        // Store each y(i) with respective x(i).\n        for (int i = n; i < 2 * n; ++i) {\n            int secondNum = nums[i] << 10;\n            nums[i - n] |= secondNum;\n        }\n\n        // '0000000000 1111111111' in decimal.\n        int allOnes = pow(2, 10) - 1;\n\n        // We will start putting all numbers from the end, \n        // as they are empty places.\n        for (int i = n - 1; i >= 0; --i) {\n            // Fetch both the numbers from the current index.\n            int secondNum = nums[i] >> 10;\n            int firstNum = nums[i] & allOnes;\n            nums[2 * i + 1] = secondNum;\n            nums[2 * i] = firstNum;\n        }\n        return nums;\n    }\n    vector<int> shuffle(vector<int>& nums, int n) {\n        // return myoriginal(nums, n);\n        // return anotherwayofimplementation(nums, n);\n        return Optimized_with_BITMANIPULATION(nums, n);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111","title_slug":"shuffle-the-array","has_notes":false}