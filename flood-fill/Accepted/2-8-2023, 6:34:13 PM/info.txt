{"id":894034397,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1675861453,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/894034397/","is_pending":"Not Pending","title":"Flood Fill","memory":"15 MB","code":"class Solution {\npublic:\n    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int color) {\n        int n=image.size();\n        int m=image[0].size();\n        vector<vector<int>> mat=image;\n        vector<vector<int>> vis(n, vector<int>(m, 0));\n        int oldColor=image[sr][sc];\n        queue<vector<int>>q;\n        q.push({sr,sc});\n        while(!q.empty()){\n            vector<int>v=q.front();\n            q.pop();\n            if(v[0]<0 || v[0]>=n || v[1]<0 || v[1]>=m) continue;\n            if(vis[v[0]][v[1]]==true) continue;\n            vis[v[0]][v[1]]=true;\n            if(image[v[0]][v[1]]==oldColor){\n                mat[v[0]][v[1]]=color;\n                q.push({v[0]+1, v[1]});\n                q.push({v[0], v[1]+1});\n                q.push({v[0]-1, v[1]});\n                q.push({v[0], v[1]-1});\n            }\n        }\n        return mat;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flood-fill","has_notes":false}