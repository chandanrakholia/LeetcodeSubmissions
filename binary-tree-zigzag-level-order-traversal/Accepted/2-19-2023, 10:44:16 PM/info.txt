{"id":901075435,"lang":"cpp","lang_name":"C++","time":"1 month, 2 weeks","timestamp":1676826856,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/901075435/","is_pending":"Not Pending","title":"Binary Tree Zigzag Level Order Traversal","memory":"12.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\nprivate:\n    vector<vector<int>>solver(TreeNode* root){\n        if(root==NULL) return {};\n        vector<vector<int>>ans;\n        queue<TreeNode*>q;\n        q.push(root);\n        vector<int>temp;\n        int level=0;\n        while(!q.empty()){\n            int sz=q.size();\n            vector<int>curr(sz);\n            for(int i=0;i<sz;i++){\n                TreeNode* temp=q.front();\n                q.pop();\n                if(level==0){\n                    curr[i]=temp->val;\n                }\n                else{\n                    curr[sz-1-i]=temp->val;\n                }\n                if(temp->left) q.push(temp->left);\n                if(temp->right) q.push(temp->right);\n            }\n            ans.push_back(curr);\n            level=!level;\n        }\n        return ans;\n    }\npublic:\n    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {\n        return solver(root);\n    }\n};","compare_result":"111111111111111111111111111111111","title_slug":"binary-tree-zigzag-level-order-traversal","has_notes":false}