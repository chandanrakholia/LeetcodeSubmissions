{"id":734418955,"lang":"cpp","lang_name":"C++","time":"9 months, 1 week","timestamp":1656523516,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/734418955/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal II","memory":"12.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> levelOrderBottom(TreeNode* root) {\n                \n        vector<vector<int>>v;\n        if(root==NULL)\n            return v;\n        \n        queue<TreeNode*>q;\n        q.push(root);\n        \n        while(q.size()>0){\n            int n=q.size();\n            vector<int>x;\n            for(int i=0;i<n;i++){\n                TreeNode* t=q.front();\n                q.pop();\n                x.push_back(t->val);\n                \n                if(t->left!=NULL )\n                    q.push(t->left); \n                if(t->right!=NULL)\n                    q.push(t->right);\n            }\n            v.push_back(x);\n        }\n        reverse(v.begin(),v.end());\n        \n        return v;\n    }\n};","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal-ii","has_notes":false}