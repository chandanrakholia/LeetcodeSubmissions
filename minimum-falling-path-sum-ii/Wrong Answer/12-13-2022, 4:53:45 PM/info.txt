{"id":859124247,"lang":"cpp","lang_name":"C++","time":"3 months, 3 weeks","timestamp":1670930625,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/859124247/","is_pending":"Not Pending","title":"Minimum Falling Path Sum II","memory":"N/A","code":"class Solution {\npublic:\n    int minFallingPathSum(vector<vector<int>>& matrix) {\n        int n=matrix.size();\n        for(int i=0;i<n;i++){\n            for(int j=0;j<n;j++){\n                if(i==0){\n                    matrix[i][j]=matrix[i][j];\n                }\n                else{\n                    if(j==0){\n                        int mini=INT_MAX;\n                        for(int k=1;k<n;k++){\n                            mini=min(mini,matrix[i-1][k]);\n                        }\n                        matrix[i][j]=mini+matrix[i][j];\n                    }\n                    else if(j==n-1){\n                            int mini=INT_MAX;\n                            for(int k=0;k<n-1;k++){\n                                mini=min(mini,matrix[i-1][k]);\n                            }\n                            matrix[i][j]=mini+matrix[i][j];\n                    }\n                    else{\n                        int mini=INT_MAX;\n                        for(int k=0;k<n;k++){\n                            mini=min(mini,matrix[i-1][k]);\n                        }\n                        matrix[i][j]=mini+matrix[i][j];\n                    }\n                }\n\n            }\n        }\n        for(int i=0;i<n;i++){\n            for(int j=0;j<n;j++){\n                cout<<matrix[i][j]<<' ';\n            }\n            cout<<endl;\n        }\n        int mini=INT_MAX;\n        for(int i=0;i<n;i++){\n            mini=min(mini, matrix[n-1][i]);\n        }\n        return mini;\n    }\n};","compare_result":"1100010000110111","title_slug":"minimum-falling-path-sum-ii","has_notes":false}