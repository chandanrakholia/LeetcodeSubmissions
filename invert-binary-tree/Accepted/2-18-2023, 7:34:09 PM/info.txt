{"id":900337423,"lang":"cpp","lang_name":"C++","time":"1 month, 2 weeks","timestamp":1676729049,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/900337423/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"9.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void solver(TreeNode* root){\n        if(!root) return;\n        swap(root->left, root->right);\n        solver(root->left);\n        solver(root->right);\n    }\n    TreeNode* invertTree(TreeNode* root) {\n        solver(root);\n        return root;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"invert-binary-tree","has_notes":false}