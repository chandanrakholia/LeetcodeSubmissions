{"id":833450093,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1667147014,"status":10,"status_display":"Accepted","runtime":"279 ms","url":"/submissions/detail/833450093/","is_pending":"Not Pending","title":"Shortest Path in a Grid with Obstacles Elimination","memory":"50.9 MB","code":"class Solution {\npublic:\n    int shortestPath(vector<vector<int>>& grid, int k) {\n        int m=grid.size();\n        int n=grid[0].size();\n        vector<vector<int>> visited(m,vector<int>(n, -1));\n        queue<vector<int>> q;\n        q.push({0,0,0,k});\n        while(!q.empty()){\n            vector<int> t=q.front();\n            q.pop();\n            int x=t[0];\n            int y=t[1];\n            if(x<0 || x>=m || y<0 || y>=n){\n                continue;\n            }\n            if(x==m-1 && y==n-1){\n                return t[2];\n            }\n            if(grid[x][y]==1){\n                if(t[3]>0){\n                    t[3]--;\n                }\n                else{\n                    continue;\n                }\n            }\n            if(visited[x][y]!=-1 && visited[x][y]>=t[3]){\n                continue;\n            }\n            visited[x][y]=t[3];\n            q.push({x+1,y,t[2]+1,t[3]});\n            q.push({x-1,y,t[2]+1,t[3]});\n            q.push({x,y+1,t[2]+1,t[3]});\n            q.push({x,y-1,t[2]+1,t[3]});\n            \n            \n        }\n        return -1;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"shortest-path-in-a-grid-with-obstacles-elimination","has_notes":false}