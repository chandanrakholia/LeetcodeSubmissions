{"id":859113866,"lang":"cpp","lang_name":"C++","time":"3 months, 3 weeks","timestamp":1670928778,"status":10,"status_display":"Accepted","runtime":"71 ms","url":"/submissions/detail/859113866/","is_pending":"Not Pending","title":"Minimum Falling Path Sum","memory":"9.8 MB","code":"class Solution {\npublic:\n    int minFallingPathSum(vector<vector<int>>& matrix) {\n        int n=matrix.size();\n        int dp[n][n];\n        for(int i=0;i<n;i++){\n            for(int j=0;j<n;j++){\n                if(i==0){\n                    dp[i][j]=matrix[i][j];\n                }\n                else{\n                    if(j==0){\n                        dp[i][j]=min(dp[i-1][j],dp[i-1][j+1])+matrix[i][j];\n                    }\n                    else if(j==n-1){\n                        dp[i][j]=min(dp[i-1][j-1],dp[i-1][j])+matrix[i][j];\n                    }\n                    else{\n                        dp[i][j]=min(min(dp[i-1][j-1],dp[i-1][j]),dp[i-1][j+1])+matrix[i][j];\n                    }\n                }\n\n            }\n        }\n        for(int i=0;i<n;i++){\n            for(int j=0;j<n;j++){\n                cout<<dp[i][j]<<' ';\n            }\n            cout<<endl;\n        }\n        int mini=INT_MAX;\n        for(int i=0;i<n;i++){\n            mini=min(mini, dp[n-1][i]);\n        }\n        return mini;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"minimum-falling-path-sum","has_notes":false}