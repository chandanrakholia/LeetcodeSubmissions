{"id":822305638,"lang":"cpp","lang_name":"C++","time":"5 months, 3 weeks","timestamp":1665750584,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/822305638/","is_pending":"Not Pending","title":"Delete the Middle Node of a Linked List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* deleteMiddle(ListNode* head) {\n        ListNode* prev=NULL;\n        ListNode* fast=head;\n        ListNode* slow=head;\n        while(fast!=NULL || fast->next!=NULL){\n            prev=slow;\n            slow=slow>next;\n            fast=fast->next->next;\n        }\n        prev->next=slow->next;\n        delete(slow);\n        return head;\n        \n    }\n};","compare_result":null,"title_slug":"delete-the-middle-node-of-a-linked-list","has_notes":false}