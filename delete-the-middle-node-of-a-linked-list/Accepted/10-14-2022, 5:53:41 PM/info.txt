{"id":822303041,"lang":"cpp","lang_name":"C++","time":"5 months, 3 weeks","timestamp":1665750221,"status":10,"status_display":"Accepted","runtime":"1298 ms","url":"/submissions/detail/822303041/","is_pending":"Not Pending","title":"Delete the Middle Node of a Linked List","memory":"294.9 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* deleteMiddle(ListNode* head) {\n        if(head->next==NULL) return NULL;\n        ListNode* temp=head;\n        int n=0;\n        while(temp!=NULL){\n            n++;\n            temp=temp->next;\n        }\n        int mid=n/2;\n        temp=head;\n        for(int i=0;i<mid-1;i++){\n            temp=temp->next;\n        }\n        ListNode* next=temp->next->next;\n        delete(temp->next);\n        temp->next=next;\n        return head;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"delete-the-middle-node-of-a-linked-list","has_notes":false}