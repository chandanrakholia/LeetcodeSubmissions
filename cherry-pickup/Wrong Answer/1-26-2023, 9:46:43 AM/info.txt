{"id":885418825,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1674706603,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/885418825/","is_pending":"Not Pending","title":"Cherry Pickup","memory":"N/A","code":"class Solution {\npublic:\n    int cherryPickup(vector<vector<int>>& grid) {\n        int n=grid.size();\n        vector<vector<int> > dp(n, vector<int> (n));\n        for(int i=0;i<n;i++){\n            for(int j=0;j<n;j++){\n                if(grid[i][j]==-1){\n                    dp[i][j]=-1;\n                }\n                else if(i==0 and j==0){\n                    dp[i][j]=grid[i][j];\n                }\n                else if(i==0 and dp[i][j-1]!=-1){\n                    dp[i][j]=grid[i][j]+dp[i][j-1];\n                }\n                else if(i==0){\n                    dp[i][j]=-1;\n                }\n                else if(j==0 and dp[i-1][j]!=-1){\n                    dp[i][j]=grid[i][j]+dp[i-1][j];\n                }\n                else if(j==0){\n                    dp[i][j]=-1;\n                }\n                else{\n                    if(dp[i][j-1]==-1 and dp[i-1][j]==-1){\n                        dp[i][j]=-1;\n                    }\n                    else if(dp[i-1][j]==-1){\n                        dp[i][j]=dp[i][j-1]+grid[i][j];\n                    }\n                    else if(dp[i][j-1]==-1){\n                        dp[i][j]=dp[i-1][j]+grid[i][j];\n                    }\n                    else{\n                        dp[i][j]=dp[i-1][j]+dp[i][j-1];\n                    }\n                }\n            }\n        }\n        if(dp[n-1][n-1]<=0) return 0;\n        else{\n            return dp[n-1][n-1];\n        }\n    }\n};","compare_result":"11110001000000110000001110000010001100000000000000000000000","title_slug":"cherry-pickup","has_notes":false}