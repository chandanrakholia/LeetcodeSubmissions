{"id":779190593,"lang":"cpp","lang_name":"C++","time":"7 months, 2 weeks","timestamp":1661062038,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/779190593/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        ListNode* fast=head;\n        ListNode* slow=head;\n        bool ans=false;\n        while(fast!=NULL && slow!=NULL){\n            if(fast==slow){\n                ans=true;\n                break;\n            }\n            fast=fast->next->next;\n            slow=slow->next;\n        }\n        if(head->next==NULL) return false;\n        else\n        return ans;\n    }\n};","compare_result":"111000000000000000000","title_slug":"linked-list-cycle","has_notes":false}