{"id":849083654,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1669288728,"status":10,"status_display":"Accepted","runtime":"689 ms","url":"/submissions/detail/849083654/","is_pending":"Not Pending","title":"Word Search","memory":"8.1 MB","code":"class Solution {\npublic:\nbool bfs(vector<vector<char>>& board,int i,int j,string word){\n    // cout<<\"checked\"<<endl;\n    int m=board.size();int n=board[0].size();\n    vector<vector<int>> visited(m,vector<int> (n,-1));\n    queue<vector<int>>q;\n    int c=0;\n    q.push({i,j,word[c]});\n    while(!q.empty()){\n        vector<int> t=q.front();\n        q.pop();\n        int x=t[0];\n        int y=t[1];\n        char z=t[2];\n        // cout<<\"checked\"<<endl;\n        // cout<<z<<endl;\n        if(x<0 || x>=m || y<0 || y>=n){continue;}\n        if(visited[x][y]!=-1){\n                continue;\n        }\n        // cout<<board[x][y]<<' '<<z<<endl;\n        // cout<<c<<endl;\n        if(board[x][y]==z and c==word.length()-1){\n            return true;\n        }\n        if(board[x][y]!=z){\n            visited[x][y]=-1;\n            continue;\n        }\n        else{\n            visited[x][y]=1;\n        }\n        c++;\n        if(c==word.length()){\n            break;\n        }\n        cout<<x<<' '<<y<<endl;\n        q.push({x+1,y,word[c]});\n        q.push({x-1,y,word[c]});\n        q.push({x,y+1,word[c]});\n        q.push({x,y-1,word[c]});\n    }\n    return false;\n}\nbool dfs(int i,int j,int count,vector<vector<char>>& board, string word){\n    if(word.length()==count) return true;\n    if(i<0 || j<0 || i>=board.size() || j>=board[0].size() || board[i][j] != word[count]) return false;\n    char temp =board[i][j];\n    board[i][j]=' ';\n    bool ans=dfs(i+1,j,count+1,board,word) || dfs(i-1,j,count+1,board,word) || dfs(i,j+1,count+1,board,word) || dfs(i,j-1,count+1,board,word);\n    board[i][j]=temp;\n    return ans;\n}\n    bool exist(vector<vector<char>>& board, string word) {\n        int m=board.size();int n=board[0].size();\n        bool k=false;\n        for(int i=0;i<m;i++){\n            for(int j=0;j<n;j++){\n                if(board[i][j]==word[0] and dfs(i,j,0,board,word)){\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"word-search","has_notes":false}