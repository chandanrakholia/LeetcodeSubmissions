{"id":830650070,"lang":"cpp","lang_name":"C++","time":"5 months, 1 week","timestamp":1666783939,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/830650070/","is_pending":"Not Pending","title":"Continuous Subarray Sum","memory":"N/A","code":"class Solution {\npublic:\n    bool checkSubarraySum(vector<int>& nums, int k) {\n        int n=nums.size();\n        int pre[n];\n        pre[0]=nums[0];\n        for(int i=1;i<n;i++){\n            pre[i]=pre[i-1]+nums[i];\n        }\n        for(int i=0;i<n;i++){\n            pre[i]=pre[i]%k;\n        }\n        map<int,int>mp;\n        for(int i=0;i<n;i++){\n            if(mp.find(pre[i])!=mp.end()){\n                if(i-mp[pre[i]]>=2){\n                    return true;\n                }\n            }\n            else{\n                mp[pre[i]]=i; \n            }\n        }\n        return false;\n    }\n};","compare_result":"1111101001111111110111111100011110100111111111111111111111111111111111111111111111111111111111111","title_slug":"continuous-subarray-sum","has_notes":false}