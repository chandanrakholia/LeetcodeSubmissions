{"id":830869466,"lang":"cpp","lang_name":"C++","time":"5 months, 1 week","timestamp":1666806033,"status":10,"status_display":"Accepted","runtime":"321 ms","url":"/submissions/detail/830869466/","is_pending":"Not Pending","title":"Continuous Subarray Sum","memory":"115.7 MB","code":"class Solution {\npublic:\n    bool checkSubarraySum(vector<int>& nums, int k) {\n        int n=nums.size();\n        int pre[n];\n        pre[0]=nums[0];\n        for(int i=1;i<n;i++){\n            pre[i]=pre[i-1]+nums[i];\n        }\n        for(int i=0;i<n;i++){\n            pre[i]=pre[i]%k;\n        }\n        map<int,int>mp;\n        mp[0]=-1;\n        for(int i=0;i<n;i++){\n            if(mp.find(pre[i])!=mp.end()){\n                if(i-mp[pre[i]]>=2){\n                    return true;\n                }\n            }\n            else{\n                mp[pre[i]]=i;\n            }\n        }\n        return false;\n    }\n};\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"continuous-subarray-sum","has_notes":false}