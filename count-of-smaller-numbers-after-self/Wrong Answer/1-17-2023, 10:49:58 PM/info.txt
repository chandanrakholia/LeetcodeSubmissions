{"id":880031443,"lang":"cpp","lang_name":"C++","time":"2 months, 2 weeks","timestamp":1673975998,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/880031443/","is_pending":"Not Pending","title":"Count of Smaller Numbers After Self","memory":"N/A","code":"class Solution {\npublic:\n    void print(vector<pair<int,int>> &L){\n        for(auto i: L){\n            cout<<i.first<<\" \"<<i.second<<endl;\n        }\n    }\n    void print1(vector<int> &ans){\n        for(auto i: ans){\n            cout<<i<<' ';\n        }\n        cout<<endl;\n    }\n    void merge(vector<pair<int,int> > &v, int l, int m ,int r, vector<int> &ans){\n        vector<pair<int,int> > temp(r-l+1);\n        int i=l;\n        int j=m+1;\n        int k=0;\n        while(i<=m and j<=r){\n            if(v[i].first<=v[j].first){\n                temp[k++]=v[j++];\n            }\n            else{\n                ans[v[i].second]+=(r-j+1);\n                temp[k++]=v[i++];\n            }\n        }\n        print1(ans);\n        while(i<=m){\n            temp[k++]=v[i++];\n        }\n        while(j<=r){\n            temp[k++]=v[j++];\n        }\n        for(int p=l; p<=r;p++){\n            v[l]=temp[p-l];\n        }\n    }\n    void mergesort(vector<pair<int,int> > &v, int l, int r, vector<int> &ans){\n        if(l>=r) return;\n        int m=(l+r)/2;\n        mergesort(v,l, m, ans);\n        mergesort(v, m+1, r, ans);\n        merge(v,l, m ,r, ans);\n    }\n    vector<int> countSmaller(vector<int>& nums) {\n        int n=nums.size();\n        vector<pair<int,int> > v(n);\n        for(int i=0;i<n;i++){\n            v[i]={nums[i], i};\n        }\n        vector<int> ans(n);\n        mergesort(v,0, n-1, ans);\n        // print(v);\n        return ans;\n    }\n};","compare_result":"011111011000000000000000000000000000000000000000000000000000000000","title_slug":"count-of-smaller-numbers-after-self","has_notes":false}