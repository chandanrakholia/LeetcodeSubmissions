{"id":815788696,"lang":"cpp","lang_name":"C++","time":"6Â months","timestamp":1664979634,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/815788696/","is_pending":"Not Pending","title":"Search in Rotated Sorted Array","memory":"N/A","code":"class Solution {\npublic:\n    int bsearch(vector<int>&nums,int l,int r,int target){\n        while(l<=r){\n            int mid=l+(r-l)/2;\n            if(nums[mid]==target) return mid;\n            if(nums[mid]>target){\n                r=mid-1;\n            }\n            else{\n                l=mid+1;\n            }\n        }\n        return -1;\n    }\n    int search(vector<int>& nums, int target) {\n        int n=nums.size();\n        int l=0;\n\t    int r=n-1;\n\t    int mid=-1;\n        int k=-1;\n\t    while(l<=r){\n            int mid=l+(r-l)/2;\n\t        int prev=(mid-1+n)%n;\n\t        int next=(mid+1)%n;\n\t        if(nums[mid]<nums[next] && nums[mid]<nums[prev]){\n                k=mid;\n                break;\n\t        }\n\t        if(nums[mid]>=nums[r]){\n\t            l=mid+1;\n\t        }\n\t        else{\n\t            r=mid-1;\n\t        }\n\n\t    }\n        if(n==1){\n            if(nums[0]==target) return 0;\n            else return -1;\n        }\n            int x=bsearch(nums,0,k-1,target);\n            int y=bsearch(nums,k,n,target);\n            if(x!=-1) return x;\n            else return y;\n    }\n};","compare_result":"111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"search-in-rotated-sorted-array","has_notes":false}