{"id":864576852,"lang":"cpp","lang_name":"C++","time":"3 months, 1 week","timestamp":1671860109,"status":10,"status_display":"Accepted","runtime":"465 ms","url":"/submissions/detail/864576852/","is_pending":"Not Pending","title":"Sliding Window Maximum","memory":"194.1 MB","code":"class Solution {\npublic:\n    vector<int> maxSlidingWindow(vector<int>& nums, int k) {\n        // vector<int> ans;\n        // for(int i=0;i<nums.size()-k+1;i++){\n        //     int mx=INT_MIN;\n        //     for(int j=i;j<i+k;j++){\n        //         if(nums[j]>mx){              //BRUTEFORCE METHOD\n        //             mx=nums[j];              // O(N^2)\n        //         }\n        //     }\n        //     ans.push_back(mx);\n        // }\n        // return ans;\n        vector<int>ans;\n        int i=0;\n        int j=0;\n        list<int>q;\n        while(j<nums.size()){\n            if(j-i+1<k){\n                if(q.size()>0){\n                    while(q.size()>0 and q.back()<nums[j]){\n                        q.pop_back();\n                    }\n                }\n                q.push_back(nums[j]);\n                j++;\n            }                                      //USING SLIDING WINDOW TECHINIQUE\n            else if(j-i+1==k){                     // O(N)\n                    while(q.size()>0 and q.back()<nums[j]){\n                        q.pop_back();\n                    }\n                q.push_back(nums[j]);\n                ans.push_back(q.front());\n                if(q.front()==nums[i]){\n                    q.pop_front();\n                }\n                j++;i++;\n            }\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111","title_slug":"sliding-window-maximum","has_notes":false}