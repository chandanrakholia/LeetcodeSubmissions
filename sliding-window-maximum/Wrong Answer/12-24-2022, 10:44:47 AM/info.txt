{"id":864569628,"lang":"cpp","lang_name":"C++","time":"3 months, 1 week","timestamp":1671858887,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/864569628/","is_pending":"Not Pending","title":"Sliding Window Maximum","memory":"N/A","code":"class Solution {\npublic:\n    vector<int> maxSlidingWindow(vector<int>& nums, int k) {\n        // vector<int> ans;\n        // for(int i=0;i<nums.size()-k+1;i++){\n        //     int mx=INT_MIN;\n        //     for(int j=i;j<i+k;j++){\n        //         if(nums[j]>mx){              //BRUTEFORCE METHOD\n        //             mx=nums[j];              // O(n^2)\n        //         }\n        //     }\n        //     ans.push_back(mx);\n        // }\n        // return ans;\n        vector<int>ans;\n        int i=0;\n        int j=0;\n        queue<int>q;\n        while(j<nums.size()){\n            if(j-i+1<k){\n                if(q.size()>0){\n                    if(q.front()<=nums[j]){\n                        while(!q.empty()){\n                            q.pop();\n                        }\n                    }\n                    q.push(nums[j]);\n                }\n                else{\n                    q.push(nums[j]);\n                }\n                j++;\n            }\n            else if(j-i+1==k){\n                if(q.front()<=nums[j]){\n                    while(!q.empty()){\n                        q.pop();\n                    }\n                }\n                q.push(nums[j]);\n                ans.push_back(q.front());\n                if(q.front()==nums[i]){\n                    q.pop();\n                }\n                j++;i++;\n            }\n        }\n        return ans;\n    }\n};","compare_result":"111111111100000010011000001101100010000100000110100","title_slug":"sliding-window-maximum","has_notes":false}