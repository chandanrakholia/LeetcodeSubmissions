{"id":902359192,"lang":"cpp","lang_name":"C++","time":"1 month, 1 week","timestamp":1676996280,"status":10,"status_display":"Accepted","runtime":"17 ms","url":"/submissions/detail/902359192/","is_pending":"Not Pending","title":"N-Queens","memory":"7.2 MB","code":"class Solution {\nprivate:\n    bool isSafe(int row, int col,vector<string>&board, int n){\n        for(int i=0;i<n;i++){\n            if(board[i][col]=='Q') return false;\n            if(row-i>=0 and col+i<n and board[row-i][col+i]=='Q') return false;\n            if(row-i>=0 and col-i>=0 and board[row-i][col-i]=='Q') return false;\n        }\n        return true;\n    }\n    void solve(int row, vector<vector<string>>&sols,vector<string>&board, int n){\n        if(row==n){\n            sols.push_back(board);\n            return;\n        }\n        for(int col=0;col<n;col++){\n            if(isSafe(row,col,board,n)){\n                board[row][col]='Q';\n                solve(row+1, sols,board, n);\n                board[row][col]='.';\n            }\n        }\n    }\npublic:\n    vector<vector<string>> solveNQueens(int n) {\n        vector<string>board(n ,string(n,'.'));\n        vector<vector<string>>sols;\n        solve(0,sols,board,n);\n        return sols;\n    }\n};","compare_result":"111111111","title_slug":"n-queens","has_notes":false}