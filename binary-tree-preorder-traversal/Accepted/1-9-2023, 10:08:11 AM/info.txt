{"id":874489828,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1673239091,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/874489828/","is_pending":"Not Pending","title":"Binary Tree Preorder Traversal","memory":"8.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\nvoid preorder(vector<int> & ans, TreeNode* root){\n    if(root==NULL) return;\n    ans.push_back(root->val);\n    preorder(ans, root->left);\n    preorder(ans, root->right);\n}\n    vector<int> preorderTraversal(TreeNode* root) {\n        vector<int>ans;\n        preorder(ans, root);\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-preorder-traversal","has_notes":false}