{"id":737359732,"lang":"cpp","lang_name":"C++","time":"9Â months","timestamp":1656846255,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/737359732/","is_pending":"Not Pending","title":"Same Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    // void sametree(TreeNode* p,TreeNode* q,int *f){\n    //     if(p==NULL and q==NULL){\n    //         return;\n    //     }\n    //     if(p->val != q->val){\n    //         f=0;\n    //         return;\n    //     }\n    //     sametree(p->left,q->left, f);\n    //     sametree(p->right,q->right,f);\n    // }\n    bool isSameTree(TreeNode* p, TreeNode* q) {\n        if(p==NULL and q==NULL){\n            return true;\n        }\n        else if(p->val != q->val){\n            return false;\n        }\n        return isSameTree(p->left,q->left) and isSameTree(p->right,q->right);\n    }\n};","compare_result":"100000000000000000000000000000000000000000000000000000000000","title_slug":"same-tree","has_notes":false}