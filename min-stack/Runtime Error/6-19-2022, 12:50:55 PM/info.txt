{"id":725775632,"lang":"cpp","lang_name":"C++","time":"9 months, 2 weeks","timestamp":1655623255,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/725775632/","is_pending":"Not Pending","title":"Min Stack","memory":"N/A","code":"class MinStack {\npublic:\n    int MIN(stack<int>s){\n        int m=0;\n        for(int i=0;i<s.size();i++){\n            if(s.top()<m){\n                m=s.top();\n                s.pop();\n            }\n            else{\n                s.pop();\n            }\n        }\n        return m;\n    }\n    stack<int>x;\n    stack<int>min;\n    MinStack() {\n\n    }\n    \n    void push(int val) {\n        if(x.size()==0 or min.top()>val){\n            min.push(val);\n        }\n        x.push(val);\n    }\n    \n    void pop() {\n        if(min.top()==x.top())\n        {\n            min.pop();\n            }\n        x.pop();\n            \n    }\n    \n    int top() {\n        return x.top();\n    }\n    \n    int getMin() {\n        return min.top();\n    }\n};\n\n/**\n * Your MinStack object will be instantiated and called as such:\n * MinStack* obj = new MinStack();\n * obj->push(val);\n * obj->pop();\n * int param_3 = obj->top();\n * int param_4 = obj->getMin();\n */","compare_result":"1111000000000000000000000000000","title_slug":"min-stack","has_notes":false}