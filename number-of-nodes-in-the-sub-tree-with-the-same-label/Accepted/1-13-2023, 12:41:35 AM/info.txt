{"id":876990154,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1673550695,"status":10,"status_display":"Accepted","runtime":"1301 ms","url":"/submissions/detail/876990154/","is_pending":"Not Pending","title":"Number of Nodes in the Sub-Tree With the Same Label","memory":"191.1 MB","code":"#include<bits/stdc++.h>\nclass Solution {\npublic:\nvoid dfs(int node,int prevnode, vector<int> &ans,unordered_map<int, list<int> > &adj, string &labels,  vector<int> &alpha){\n    int prevcount=alpha[labels[node]-'a'];\n    alpha[labels[node]-'a']++;\n    for(auto i: adj[node]){\n        if(i==prevnode) continue;\n            dfs(i, node,  ans, adj,labels, alpha);\n    }\n    ans[node]=alpha[labels[node]-'a'] - prevcount;\n    cout<<\"node: \"<<node<<\" prevcount: \"<<prevcount<<\" \"<<ans[node]<<endl; \n}\n    vector<int> countSubTrees(int n, vector<vector<int>>& edges, string labels) {\n        unordered_map<int, list<int> > adj;\n        for(int i=0;i<edges.size();i++){\n            int u=edges[i][0];\n            int v=edges[i][1];\n            adj[u].push_back(v);\n            adj[v].push_back(u);\n        }\n        vector<int> ans(n, 0);\n        vector<int> alpha(26, 0);\n        dfs(0,0, ans, adj,labels, alpha);\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-nodes-in-the-sub-tree-with-the-same-label","has_notes":false}