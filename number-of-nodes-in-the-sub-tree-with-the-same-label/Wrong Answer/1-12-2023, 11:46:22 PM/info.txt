{"id":876956763,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1673547382,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/876956763/","is_pending":"Not Pending","title":"Number of Nodes in the Sub-Tree With the Same Label","memory":"N/A","code":"#include<bits/stdc++.h>\nclass Solution {\npublic:\nvoid dfs(int node, vector<int> &ans,unordered_map<int, list<int> > &adj, unordered_map<int, bool> &visited , string labels,  map<char, int> &alpha){\n    visited[node]=true;\n    for(auto i: adj[node]){\n        if(!visited[i]){\n            dfs(i, ans, adj, visited, labels, alpha);\n        }\n    }\n    alpha[labels[node]]++;\n    ans[node]=alpha[labels[node]];\n\n}\n    vector<int> countSubTrees(int n, vector<vector<int>>& edges, string labels) {\n        unordered_map<int, list<int> > adj;\n        for(int i=0;i<edges.size();i++){\n            int u=edges[i][0];\n            int v=edges[i][1];\n            adj[u].push_back(v);\n            adj[v].push_back(u);\n        }\n        vector<int> ans(n);\n        unordered_map<int, bool> visited;\n        map<char, int> alpha;\n        int node=edges[0][0];\n        dfs(node, ans, adj, visited, labels, alpha);\n        ans[n-1]=1;\n        return ans;\n    }\n};","compare_result":"11101111111000111010101000000000000000000000000000000000000","title_slug":"number-of-nodes-in-the-sub-tree-with-the-same-label","has_notes":false}