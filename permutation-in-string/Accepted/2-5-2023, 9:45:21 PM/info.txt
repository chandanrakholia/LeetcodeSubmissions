{"id":892106984,"lang":"cpp","lang_name":"C++","time":"1 month, 4 weeks","timestamp":1675613721,"status":10,"status_display":"Accepted","runtime":"364 ms","url":"/submissions/detail/892106984/","is_pending":"Not Pending","title":"Permutation in String","memory":"9.5 MB","code":"class Solution {\npublic:\n    bool checkInclusion(string s1, string s2) {\n        string s=s2;\n        string p=s1;\n        map<int,int>mp;\n        for(auto i: p) mp[i-'a']++;\n        int ind1=0;      //Copy pasted same code from this: ->\n        int ind2=0;     //https://leetcode.com/problems/find-all-anagrams-in-a-string/\n        int n=s.length();\n        int m=p.length();\n        map<int,int> temp;\n        vector<int> ans;\n        while(ind2<n){\n            if(ind2-ind1+1 < m){\n                temp[s[ind2]-'a']++;\n                cout<<\"ind1: \"<<ind1<<\" \"<<\"ind2: \"<<ind2<<endl;\n                ind2++;\n            }\n            else if(ind2-ind1+1==m){\n                cout<<\"ind1: \"<<ind1<<\" \"<<\"ind2: \"<<ind2<<endl;\n                temp[s[ind2]-'a']++;\n                if(temp==mp){\n                    ans.push_back(ind1);\n                    // cout<<ind1<<endl;\n                }\n                if(--temp[s[ind1]-'a']==0) temp.erase(s[ind1]-'a');\n                ind1++;\n                ind2++;\n            }\n            // cout<<ind2<<endl;\n        }\n        return ans.size();\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"permutation-in-string","has_notes":false}