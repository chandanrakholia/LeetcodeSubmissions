{"id":722822056,"lang":"cpp","lang_name":"C++","time":"9 months, 3 weeks","timestamp":1655293758,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/722822056/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"8.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> inorderTraversal(TreeNode* root) {\n        vector<int>v;\n        stack<TreeNode*>s;\n        TreeNode* curr=root;\n        while(curr!=NULL or s.empty()==false){\n            while(curr!=NULL){\n                s.push(curr);\n                curr=curr->left;\n            }\n            curr=s.top();\n            s.pop();\n            v.push_back(curr->val);\n            curr=curr->right;\n            \n        }\n        return v;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal","has_notes":false}