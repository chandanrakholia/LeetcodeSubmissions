{"id":891930847,"lang":"cpp","lang_name":"C++","time":"1 month, 4 weeks","timestamp":1675590414,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/891930847/","is_pending":"Not Pending","title":"Best Time to Buy and Sell Stock II","memory":"N/A","code":"class Solution {\npublic:\n    int optimized(vector<int>& prices){\n        int mini=prices[0];\n        int n=prices.size();\n        int prof=0;\n        for(int i=1;i<n;i++){\n            if(prices[i] < mini){\n                mini=min(mini, prices[i]);\n            }\n            else {\n                prof+=prices[i]-mini;\n                mini=prices[i];\n            }\n        }\n        return prof;\n    }\n    int bruteforceutility(vector<int>& prices, int s){\n        int n=prices.size();\n        if(s>=n) return 0;\n        int maxi=0;\n        for(int start=s;start<n;start++){\n            for(int i=start+1;i<n;i++){\n                if(prices[i] > prices[start]){\n                    maxi =max(maxi,   bruteforceutility(prices, i+1) + prices[i]-prices[start]);\n                }\n            }\n        }\n        return maxi;\n    }\n    int bruteforce(vector<int> &prices){\n        return bruteforceutility(prices, 0);\n    }\n    int maxProfit(vector<int>& prices) {\n        // return optimized(prices);\n        return bruteforce(prices);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100","title_slug":"best-time-to-buy-and-sell-stock-ii","has_notes":false}