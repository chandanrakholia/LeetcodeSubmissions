{"id":903111381,"lang":"cpp","lang_name":"C++","time":"1 month, 1 week","timestamp":1677094706,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/903111381/","is_pending":"Not Pending","title":"Split Array Largest Sum","memory":"7.3 MB","code":"class Solution {\npublic:\n    bool isPossible(int mid,vector<int>& nums, int k){\n        int d=1;\n        int sum=0;\n        for(int i=0;i<nums.size();i++){\n            sum+=nums[i];\n            if(sum>mid){\n                d++;\n                sum=nums[i];\n            }\n        }\n        return d<=k;\n    }\n    int splitArray(vector<int>& nums, int k) {\n        int sum=0;\n        int mx=0;\n        for(auto i: nums){\n            sum+=i;\n            mx=max(mx, i);\n        }\n        int lo=mx;\n        int hi=sum;\n        int ans=0;\n        while(lo<=hi){\n            int mid=lo+(hi-lo)/2;\n            if(isPossible(mid, nums, k)){\n                hi=mid-1;\n                ans=mid;\n            }\n            else{\n                lo=mid+1;\n            }\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"split-array-largest-sum","has_notes":false}