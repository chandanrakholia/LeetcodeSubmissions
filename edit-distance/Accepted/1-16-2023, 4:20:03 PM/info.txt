{"id":879149533,"lang":"cpp","lang_name":"C++","time":"2 months, 2 weeks","timestamp":1673866203,"status":10,"status_display":"Accepted","runtime":"18 ms","url":"/submissions/detail/879149533/","is_pending":"Not Pending","title":"Edit Distance","memory":"9.1 MB","code":"class Solution {\npublic:\n    void print(vector<vector<int> > &dp){\n        for(auto i: dp){\n            for(auto j: i){\n                cout<<j<< ' ';\n            }\n            cout<<endl;\n        }\n    }\n    int solve(string s, string t, int x, int y, vector<vector<int> > &dp){\n        if(x==0) return y;\n        if(y==0) return x;\n        if(dp[x][y]!=-1) return dp[x][y];\n        if(s[x-1]==t[y-1]) return dp[x][y]=solve(s, t, x-1, y-1, dp);\n        else{\n            int insert=1+solve(s,t,x,y-1, dp);\n            int del=1+solve(s,t,x-1, y, dp);\n            int replace=1+solve(s,t, x-1, y-1, dp);\n            return dp[x][y]=min(min(insert,del), replace);\n        }\n    }\n    int solveTab(string s, string t, int x, int y){\n        vector<vector<int> > dp(s.length()+1, vector<int>(t.length()+1, 0));\n        // for(int i=0;i<=y;i++){\n        //     dp[x][i]=i;\n        // }\n        // for(int i=0;i<=x;i++){\n        //     dp[i][y]=i;\n        // }\n        for(int i=0;i<=x;i++){\n            for(int j=0;j<=y;j++){\n                if(i==0) dp[i][j]=j;\n                else if(j==0) dp[i][j]=i;\n                else if(s[i-1]==t[j-1]) dp[i][j]=dp[i-1][j-1];\n                else{\n                    int insert=1+dp[i][j-1];\n                    int del=1+dp[i-1][j];\n                    int replace=1+dp[i-1][j-1];\n                    dp[i][j]=min(min(insert,del), replace);\n                }\n            }\n        }\n        // print(dp);\n        return dp[x][y];\n    }\n    int minDistance(string word1, string word2) {\n        /*Using DP - Concept of LCS*/\n        // vector<vector<int> > dp(word1.length()+1, vector<int>(word2.length()+1, -1));\n        // int ans=solve(word1, word2, word1.length(), word2.length(), dp);\n        int ans=solveTab(word1, word2, word1.length(), word2.length());\n        // print(dp);\n        return ans;\n    }\n};","compare_resulttitle_slug":"edit-distance","has_notes":false}