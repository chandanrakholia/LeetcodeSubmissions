{"id":909504696,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1678015390,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/909504696/","is_pending":"Not Pending","title":"Jump Game","memory":"N/A","code":"class Solution {\npublic:\n    void print(vector<bool>&istrue){\n        for(auto i: istrue){\n            cout<<i<<\" \";\n        }\n        cout<<endl;\n    }\n    bool canJump(vector<int>& nums) {\n        int n=nums.size();\n        vector<bool>istrue(n,0);\n        int j=0;\n        for(int i=0;i<n;i++){\n            if(i==0){\n                istrue[0]=true;\n                j=i+nums[i];\n            }\n            else{\n                if(j>=i){\n                    istrue[i]=true;\n                    j--;\n                }\n                else{\n                    break;\n                }\n            }\n            j=max(j, i+nums[i]);\n            cout<<\"j: \"<<j<<endl;\n        }\n        print(istrue);\n        return istrue[n-1];\n    }\n};","compare_result":"11111111100111111011111011101111101111110111111111110111011011101111011001111011100111111111111110111111111011111011111111111011111101111101111111111111111011111111011001","title_slug":"jump-game","has_notes":false}