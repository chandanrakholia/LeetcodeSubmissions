{"id":848450782,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1669185939,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/848450782/","is_pending":"Not Pending","title":"Valid Sudoku","memory":"N/A","code":"class Solution {\npublic:\nbool solve(vector<vector<char>>& board,int p,int q){\n    set<char>s;\n    for(int i=p;i<p+3;i++){\n        for(int j=q;j<q+3;j++){\n            cout<<i<<' '<<j<<endl;\n                if(s.find(board[i][j])!=s.end()){\n                    cout<<board[i][j]<<' '<<endl;\n                    return false;\n                }\n                else if(board[i][j]!='.') s.insert(board[i][j]);\n        }\n    }\n    return true;\n}\n    bool isValidSudoku(vector<vector<char>>& board) {\n        set<char>s;\n        for(int i=0;i<9;i++){\n            for(int j=0;j<9;j++){\n                if(s.find(board[i][j])!=s.end()){\n                    return false;\n                }\n                else if(board[i][j]!='.') s.insert(board[i][j]);\n                s.clear();\n            }\n        }\n        bool f= true;\n        int i=0;\n        while(i<8){\n            int j=0;\n            while(j<8){\n                f=f && solve(board,i,j);\n                j=j+3;\n            }\n            i=i+3;\n        }\n        return f;\n    }\n};","compare_result":"111110111101001111110111111111111111111111111111101011110101111111111111111111111111101101111111111011010000011000111111110101111100100101111110111111111111001101110001111111111010101001111101000111101111110111001011111111101101111000111011110100111111111001101110110000100001111111100111111010011111010001111110011010111100011101011111101111010110101111101111011110011101111010111111000100011011011111010111110010111111100101001011111111111011110100111111001110111111101111101111011010010011101101001110111","title_slug":"valid-sudoku","has_notes":false}