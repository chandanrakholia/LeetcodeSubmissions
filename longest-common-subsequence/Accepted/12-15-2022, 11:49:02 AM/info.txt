{"id":860037313,"lang":"cpp","lang_name":"C++","time":"3 months, 2 weeks","timestamp":1671085142,"status":10,"status_display":"Accepted","runtime":"1032 ms","url":"/submissions/detail/860037313/","is_pending":"Not Pending","title":"Longest Common Subsequence","memory":"13.1 MB","code":"class Solution {\npublic:\n    int longestCommonSubsequence(string text1, string text2) {\n        int n=text1.length();\n        int m=text2.length();\n        vector<vector<int>> dp(n+1, vector<int>(m+1, 0));\n        for(int i=0;i<=n;i++){\n            for(int j=0;j<=m;j++){\n                if(i==0 || j==0){\n                    dp[i][j]=0;\n                }\n                else if(text1[i-1]==text2[j-1]){\n                    dp[i][j]=dp[i-1][j-1]+1;\n                }\n                else{\n                    dp[i][j]=max(dp[i-1][j],dp[i][j-1]);\n                }\n            }\n        }\n        for(int i=0;i<=n;i++){\n            for(int j=0;j<=m;j++){\n                cout<<dp[i][j]<<' ';\n            }\n            cout<<endl;\n        }\n        return dp[n][m];\n    }\n};","compare_result":"111111111111111111111111111111111111111111111","title_slug":"longest-common-subsequence","has_notes":false}