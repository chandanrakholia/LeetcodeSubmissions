{"id":698819280,"lang":"cpp","lang_name":"C++","time":"10 months, 3 weeks","timestamp":1652463180,"status":10,"status_display":"Accepted","runtime":"430 ms","url":"/submissions/detail/698819280/","is_pending":"Not Pending","title":"Palindrome Linked List","memory":"114.1 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    bool isPalindrome(ListNode* head) {\n    ListNode* slow = head;\n    ListNode* fast = head;\n\n    while (fast and fast->next) {\n      slow = slow->next;\n      fast = fast->next->next;\n    }\n\n    if (fast)\n      slow = slow->next;\n    slow = reverseList(slow);\n\n    while (slow) {\n      if (slow->val != head->val)\n        return false;\n      slow = slow->next;\n      head = head->next;\n    }\n\n    return true;\n  }\n\n private:\n  ListNode* reverseList(ListNode* head) {\n    ListNode* previous = NULL;\n\n    while (head) {\n      ListNode* next = head->next;\n      head->next = previous;\n      previous = head;\n      head = next;\n    }\n\n    return previous;\n  }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"palindrome-linked-list","has_notes":false}