{"id":753834625,"lang":"cpp","lang_name":"C++","time":"8 months, 2 weeks","timestamp":1658505055,"status":12,"status_display":"Memory Limit Exceeded","runtime":"N/A","url":"/submissions/detail/753834625/","is_pending":"Not Pending","title":"Partition Equal Subset Sum","memory":"N/A","code":"class Solution {\npublic:\n    int t[300][20001];\n    bool fun(vector<int>arr,int sum,int n){\n        if(sum==0) return true;\n        if(n==0) return false;\n        if (t[n - 1][sum] != -1)\n        return t[n - 1][sum];\n        if(arr[n-1] > sum) \n        return t[n-1][sum]=fun(arr,sum,n-1);\n        else{\n               return t[n-1][sum]=fun(arr,sum,n-1) || fun(arr, sum - arr[n - 1],n-1);\n        }\n}\n    bool canPartition(vector<int>& nums) {\n        memset(t,-1,sizeof(t));\n        long long int s=0;\n        for(int i=0;i<nums.size();i++){\n            s+=nums[i];\n        }\n        if(s%2==0){\n            bool f=fun(nums,s/2,nums.size());\n            return fun(nums,s/2,nums.size());\n        }\n        else{\n            return false;\n        }\n\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000","title_slug":"partition-equal-subset-sum","has_notes":false}