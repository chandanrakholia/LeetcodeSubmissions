{"id":721827845,"lang":"cpp","lang_name":"C++","time":"9 months, 3 weeks","timestamp":1655186505,"status":10,"status_display":"Accepted","runtime":"457 ms","url":"/submissions/detail/721827845/","is_pending":"Not Pending","title":"Largest Rectangle in Histogram","memory":"93.1 MB","code":"class Solution {\npublic:\n    int largestRectangleArea(vector<int>& heights) {\n    // int n;\n    // int arr[]={6,2,5,4,5,1,6};\n    // n=sizeof(arr)/sizeof(arr[0]);\n\n    //FOR NSL\n\n    vector<int>v1;\n    stack<pair<int,int>>s1;\n    for (int i =0; i<heights.size(); i++)\n    {\n        if (s1.size()==0)\n        {\n            v1.push_back(-1);\n            // cout<<-1<<endl;\n        }\n        else if (s1.size()>0 && heights[i]>s1.top().first)\n        {\n            v1.push_back(s1.top().second);\n            // cout<<s.top()<<endl;\n        }\n        else if (s1.size()>0 && heights[i]<=s1.top().first)\n        {\n            while (s1.size()>0 and s1.top().first>=heights[i])\n            {\n                s1.pop();\n            }\n            if (s1.size()==0)\n            {\n                v1.push_back(-1);\n                // cout<<-1<<endl;\n            }\n            else\n            {\n                v1.push_back(s1.top().second);\n                // cout<<s.top()<<endl;\n            }\n            \n        }\n        \n        s1.push({heights[i],i});\n        \n    }\n\n    //FOR NSR\n    vector<int>v2;\n    stack<pair<int,int>>s2;\n        for (int i =heights.size()-1; i>=0; i--)\n    {\n        if (s2.size()==0)\n        {\n            v2.push_back(heights.size());\n            // cout<<-1<<endl;\n        }\n        else if (s2.size()>0 && heights[i]>s2.top().first)\n        {\n            v2.push_back(s2.top().second);\n            // cout<<s.top()<<endl;\n        }\n        else if (s2.size()>0 && heights[i]<=s2.top().first)\n        {\n            while (s2.size()>0 and s2.top().first>=heights[i])\n            {\n                s2.pop();\n            }\n            if (s2.size()==0)\n            {\n                v2.push_back(heights.size());\n                // cout<<-1<<endl;\n            }\n            else\n            {\n                v2.push_back(s2.top().second);\n                // cout<<s.top()<<endl;\n            }\n            \n        }\n        \n        s2.push({heights[i],i});\n        \n    }\n    reverse(v2.begin(),v2.end());\n\n    int area[heights.size()];\n    int width[heights.size()];\n    for (int i = 0; i < heights.size(); i++)\n    {\n        width[i]=v2[i]-v1[i]-1;\n    }\n    \n    for (int i = 0; i < heights.size(); i++)\n    {\n        area[i]=heights[i]*width[i];\n        // cout<<area[i]<<endl;\n    }\n\n    return *max_element(area,area+heights.size());       \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"largest-rectangle-in-histogram","has_notes":false}