{"id":896705729,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1676225984,"status":10,"status_display":"Accepted","runtime":"233 ms","url":"/submissions/detail/896705729/","is_pending":"Not Pending","title":"Largest Rectangle in Histogram","memory":"92.3 MB","code":"class Solution {\nprivate:\n    void print(vector<int> &v){\n        for(auto i: v){\n            cout<<i<<\" \";\n        }\n        cout<<endl;\n    }\n    void smallestright(vector<int>&h, vector<int>&v, int n){\n        stack<pair<int,int>>st;\n        for(int i=n-1;i>=0;i--){\n            if(st.empty()){\n                v.push_back(n);\n            }\n            else if(h[i]>st.top().first){\n                v.push_back(st.top().second);\n            }\n            else{\n                while(!st.empty() and st.top().first>=h[i]){\n                    st.pop();\n                }\n                if(st.empty()){\n                    v.push_back(n);\n                }\n                else{\n                    v.push_back(st.top().second);\n                }\n            }\n            st.push({h[i],i});\n        }\n        reverse(v.begin(), v.end());\n    }\n    void smallestleft(vector<int>&h, vector<int>&v, int n){\n        stack<pair<int,int>>st;\n        for(int i=0;i<n;i++){\n            if(st.empty()){\n                v.push_back(0);\n            }\n            else if(h[i]>st.top().first){\n                v.push_back(st.top().second+1);\n            }\n            else{\n                while(!st.empty() and st.top().first>=h[i]){\n                    st.pop();\n                }\n                if(st.empty()){\n                    v.push_back(0);\n                }\n                else{\n                    v.push_back(st.top().second+1);\n                }\n            }\n            st.push({h[i],i});\n        }\n    }\npublic:\n    int largestRectangleArea(vector<int>& heights) {\n        int n=heights.size();\n        vector<int>right, left;\n        smallestright(heights, right,n);\n        smallestleft(heights, left,n);\n        int maxi=0;\n        for(int i=0;i<n;i++){\n            maxi=max(maxi, (right[i]-left[i])*heights[i]);\n        }\n        return maxi;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"largest-rectangle-in-histogram","has_notes":false}